awk工具概述
格式 awk -F[:/] '{print $10}' 文件名
创造者 Aho Weinberger  Kernighan 三个单词一块组成
比sed查找强大,但是只能修改，不能保存
NR 文件当前行的行号
NF 文件当前行的列数(有几列)
awk 内置变量(常量和变量) 变量两边打，相当于两边有空格
$0
$1
NF
BEGIN 格式
awk 'BEGIN{X=0}/bash$/{x++}END{print x}' /etc/passwd
变量两边加 "\t" 相当于两边加tab
1)使用正则设置条件
awk -F: '$1~/root/' /etc/passwd   //输出账户名称包含root的基本信息
awk -F: '$7!~/nologin$/{print $1,$7}' /etc/passwd  //输出其中登录Shell不以nologin结尾

awk -F: '/^(root|adm)/{print $1,$3}' /etc/passwd  //输出root或adm账户的用户名和UID信息
2)使用数值
awk -F: '$3<10{print $1,$3}' /etc/passwd  //找出第三列小于10的行，并输出第一列，第三列
awk -F: '$3>=1000{print $1,$3}' /etc/passwd  //找到第三列大于1000的行，并输出第一列，第三列
awk -F: 'NR==3{print}' /etc/passwd  //输出第三行 
awk -F: '$1=="root"' /etc/passwd   //输出第一列是root的行
3）逻辑测试条件 && ||
awk -F: '$3>10 && $3<20' /etc/passwd //输出第三列大于10并且第三列小于20的行
awk -F: '$3>1000 || $3<10' /etc/passwd //输出第三列大于1000或者第三列小于10的行
seq 100|awk '$1%7==0||$1~/7/'   //列出100以内整数中7的倍数或是含7的数
使用awk数组+for循环实现文档的复杂过滤
先准备素材文档a.txt,内容为：
192.168.0.1
192.168.0.2
192.168.0.2
192.168.0.3
192.168.0.3
192.168.0.3
192.168.0.3
然后使用awk获取该文档中所有出现的ip地址，以及出现的次数
awk '{ip[$1]++}END{for(i in ip){print i,ip[i]}}' a.txt
192.168.0.1 1
192.168.0.2 2
192.168.0.3 4








